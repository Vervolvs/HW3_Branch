1) На локальном репозитории сделать ветки для:  ==  Необходимо зайти в локальный репозиторий. Далее, пишем команду git branch + названием папки. 
- Postman
- Jmeter
- CheckList
- Bag Reports
- SQL
- Charles
- Mobile testing

2) Запушить все ветки на внешний репозиторий ==  Находясь в ветке, которую необходимо запушить, вводим команду git push -u origin + название ветки, которую пушим. 

3) В ветке Bug reports сделать текстовый документ со структурой баг репорта == Переходим в необходимую ветку при помощи команды git checkout + название папки, в которую нужно перейти. Создаём документ nano bag_reports.txt.
									       Текст:

									       Структура баг репорта:
    									       Краткое описание проблемы
                             						       Продукт
    									       Платформа
   									       Статус
    									       Приоритет
  									       Серьезность
  									       Шаги воспроизведения
 									       Фактический результат
 								               Ожидаемый результат
   									       Прикрепленные файлы

4) Запушить структуру бага репорта на внешний репозиторий == git add .
							     git commit -m "bug_reports"
						             git push 

5) Вмержить ветку Bag_Reports в Main == Переходим на главную ветку Main, вводим команду git merge Bag_reports

6) Запушить Main на внешний репозиторий == 		    git add .
							    git commit -m "bug_reports"
						            git push

7) В ветке CheckLists набросать структуру чек листа == Вводим команду git checkout CheckList, далее создаём файл nano CheckLists.txt
						      Текст файла:
					              Чек-лист (checklist) — документ, описывающий набор (список) проверок или идей. Чек-лист помогает не упустить различные моменты в больших проектах.

						      Статусы проверок в чек-листах:
						      passed — проверено, соответствует ожидаемому результату, работает согласно заявленным требованиям. Комментарий необязателен.
   						      failed — поведение системы не соответствует ожидаемым требованиям, найден дефект. Пишется комментарий, желательно указывается ИД бага в багтрекенговой системе.
                                                      blocked — выполнить проверку невозможно, имеются обстоятельства (дефект, модуль, компонент), которые блокируют дальнейшую проверку. В комментарии указывается причина.
                                                      skipped — тест пропущен. Возможно, отсутствует необходимый модуль для проверки, который будет не реализован. В комментарии указывается причина пропуска.
                                                      draft - тест пропущен, либо не начат. Отсутствует объект тестирования, который будет реализован позже. Комментарий не обязателен.
						
						      Структура чек-листа: 
						      Чётких критериев для создания чек-листа нет. Обычно количество столбцов, значения, строки зависят от конкретной специфики реализуемого проекта или устоявшиеся порядки в команде тестировщиков.
						      Минимальный чек-лист может состоять из следующих столбцов: Номер, Проверка/действия тестировщика, результат, комментарий.

8) Запушить структуру чек-листа на внешний репозиторий == git add .
							  git commit -m "CheckLists"
						          git push

9) На внешнем репозитории сделать Pull Request ветки CheckLists в Main == Переходим на внешний репозиторий, нажимаем на "Compare & pull request", проверяем правильность вмерживания ветки, нажимаем Create pull request, проверяем, нет ли кофликта вмерживаемой ветки в основную, если нет, нажимаем Merge pull request --> Сonfirm

10) Синхронизировать Внешнюю и Локальную ветки Main == Переходим в локальном репозитории в ветку main, вводим команду git pull
